.TH "MEMCACHED_CREATE" "3" "April 14, 2011" "0.47" "libmemcached"
.SH NAME
memcached_create \- libmemcached Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.sp
Create a memcached_st structure
.SH SYNOPSIS
.sp
#include <libmemcached/memcached.h>
.INDENT 0.0
.TP
.B memcached_st *memcached_create (memcached_st *ptr);
.UNINDENT
.INDENT 0.0
.TP
.B void memcached_free (memcached_st *ptr);
.UNINDENT
.INDENT 0.0
.TP
.B memcached_st *memcached_clone (memcached_st *destination, memcached_st *source);
.UNINDENT
.INDENT 0.0
.TP
.B void memcached_servers_reset(memcached_st);
.UNINDENT
.sp
Compile and link with \-lmemcached
.SH DESCRIPTION
.sp
memcached_create() is used to create a \fBmemcached_st\fP structure that will then
be used by other libmemcached(3) functions to communicate with the server. You
should either pass a statically declared \fBmemcached_st\fP to memcached_create() or
a NULL. If a NULL passed in then a structure is allocated for you.
.sp
Please note, when you write new application use memcached_create_with_options() over memcached_create().
.sp
memcached_clone() is similar to memcached_create(3) but it copies the
defaults and list of servers from the source \fBmemcached_st\fP. If you pass a null as
the argument for the source to clone, it is the same as a call to memcached_create().
If the destination argument is NULL a \fBmemcached_st\fP will be allocated for you.
.sp
memcached_servers_reset() allows you to zero out the list of servers that
the memcached_st has.
.sp
To clean up memory associated with a \fBmemcached_st\fP structure you should pass
it to memcached_free() when you are finished using it. memcached_free() is
the only way to make sure all memory is deallocated when you finish using
the structure.
.sp
You may wish to avoid using memcached_create(3) or memcached_clone(3) with a
stack based allocation. The most common issues related to ABI safety involve
heap allocated structures.
.SH RETURN
.sp
memcached_create() returns a pointer to the memcached_st that was created
(or initialized). On an allocation failure, it returns NULL.
.sp
memcached_clone() returns a pointer to the memcached_st that was created
(or initialized). On an allocation failure, it returns NULL.
.SH HOME
.sp
To find out more information please check:
\fI\%http://libmemcached.org/\fP
.SH SEE ALSO
.sp
\fImemcached(1)\fP \fIlibmemcached(3)\fP \fImemcached_strerror(3)\fP
.SH AUTHOR
Brian Aker
.SH COPYRIGHT
2011, Brian Aker DataDifferential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.\" 
.
